{"version":3,"sources":["lib/logger.js","lib/utils.js","lib/RBS.js","lib/drawChart.js","app.js"],"names":["log","value","console","Util","createRangeArray","initialValue","increment","howMany","arr","currentValue","i","push","RBS","calculateFuelSaved","mass","velocity","rbsEfficiency","kineticEnergy","calculateKineticEnergy","energySaved","calculateEnergySaved","fuelSavedPetrol","fuelSavedDiesel","toFixed","energy","rbsEfficiciency","drawChart","divId","options","Chart","defaults","global","animation","duration","lineChartData","labels","datasets","label","FirstDataSet","borderColor","backgroundColor","fill","data","dataSet1","yAxisID","SecondDataSet","dataSet2","canvas","document","createElement","getElementById","appendChild","ctx","getContext","window","myLine","Line","responsive","hoverMode","stacked","title","display","text","titleText","scales","yAxes","type","position","id","add","a","b","masses","fuelSavedDataVsMass","map","velocities","fuelSavedDataVsVelocity","vel","brakeEfficiencies","fuelSavedDataVsBrakeEfficiency","efficiency","item"],"mappings":";;AIAA;;AACA;;AACA,AFFA,IAAMY,GAAG,GAAG;AACRC,ACDJ,AHAA,ACAA,ECCIA,OCDKa,AHAA1B,GAAT,CAAaC,KGAb,AHAA,CGAmB0B,CDCG,AFDF,EECI,ECDxB,EAA0BC,OAA1B,EAAmC,eDCDd,IAAV,EAAgBC,QAAhB,EAA0BC,aAA1B,EAAyC;AACzD,ACDNa,AHAE3B,EGAF2B,AHAE3B,KGAG,CDCOe,ACDNa,CHAG,CAAC9B,GAAR,CAAY,EGAd,CAAe+B,IDCU,AFDJ9B,EGArB,CDC4B,ACDN+B,EHApB,EAA0B,CECKd,ICDjC,CAAgCe,QAAhC,CHAE,EGAyC,IAA3C,EDC4B,CAA4BnB,IAA5B,EAAkCC,QAAlC,CAAtB;AACA,ACDJ,AHAH,MGAOmB,EDCMf,WAAW,ACDJ,GDCO,ACDJ,KDCSC,oBAAL,CAA0BH,aAA1B,EAAyCD,aAAzC,CAApB;AECR,AFAQ,ACDAmB,ICCFqC,ADDErC,IDCMd,EEAF,ADDE,EAAEO,CCCDzB,MDDQ,CAACgC,GDCK,GAAGhB,ACFR,ECEJf,SFAuB,IAAI,GEAhC,CAAsB,IAAtB,AFAwC,EEAZ,EAA5B,AFA4B,CAAnC,CEAuC,EAAhC,CAAf;AFCQ,ACDAgC,AFFR,IEEQA,AFFFjC,ICGQmB,ADHJ,GAAI,CEEE,EAAE,CAAC,AHAJtB,QECc,GAAGmB,WAAW,IAAI,QAAQ,IAAZ,CAAnC;AECR,AFAQ,ACDEkB,AFFNjC,EAAAA,EGGAqE,EDDMpC,KDCK,ACDA,EAAET,KFFG,EEEI,AFFF,CEEGU,ECCF,GAAGkC,MAAM,CAACE,ADFd,GCEO,CAAW,SHHNrE,CGGMS,IAAI,OHHnB,EAAuBR,SAAvB,EAAkCC,OAAlC,EAA2C;AGGxB,AFC7BO,ACDFyB,AFFF,MCGIzB,ACDFyB,EFFE/B,CGEiCI,CFC7B,CDHD,CCGGE,EDHA,CAACT,CCEJ,CCAM,EAAE,GCA0BQ,GDF9B,EFAD,CAAV,YGEqC,CAAuBC,IAAvB,EAA6B,GAA7B,EAAkC,EAAlC,CAAJ;AAAA,AFE7BC,ACDFyB,AFFF,CGCkB,CAA1B,IFEYzB,ACDFyB,EFFE/B,MCGQ,EAAEM,IDHE,CEEC,EAAE,AFFAV,CCCZ,KCFI,MFCX;AGERH,AFEYc,ACDFyB,MDCEzB,ACDFyB,CCDH,CAACzC,EDCM,CCDd,CAAYyE,ADCI,KAJG,EDKM,EAAEzD,UEF3B,GFDe;AAIHC,ACDFyB,AFHF,MCIIzB,ACDFyB,GFHE,CEGE,EAAEd,CFHAlB,CAAC,GAAG,CAAZ,CCIiB,ACDF,CAACiC,AFHDjC,CCIIO,ADJH,IAAGV,GEFR,IFEX,ECIgC,ADJJG,CCIKa,ADJJ,EAA7B,EAAiC,GCId,CAAsB,CAAtB,CAJZ;AEGf,AFEYJ,ACDFyB,AFHEnC,IGENkE,EFEMxD,ACDFyB,AFHEnC,OEGK,CCDD,CDCG,ECDAN,AFEI,CDJC,CCICgB,GDJGb,QCIQ,CAACiB,ADJzB,CGEYnB,MFEC,CAAoB,CAApB,CALV,OEGI,CAAsB,EAAtB,EAA0B,CAA1B,EAA6B,EAA7B,CAAnB;AFGYiB,ACRO,AFIPb,KEJM,CDQNa,ADJAb,CEGD,EFHI,CAACG,IAAJ,CAASF,MCIM,EAAEY,IDJjB,WCIgC,CAACE,OAAhB,CAAwB,CAAxB,CANd;AEKf,AFEYD,ACDFe,AFHD,IGELuC,EFEQtD,ACDFe,KAAK,EAAET,OAAO,CDCG,ACDFiB,EDCIvB,IEFF,GAAGqD,IDAnB,IDEiC,CAACpD,CEFL,CAACmD,GAAX,CAAe,CFEhB,CAAwB,CAAxB,OEFgBG,GAAG;AAAA,AFLjC,ACOLtC,KDPF,CCOEA,GCF0C3B,QDE/B,EAAE,GCFiCC,GDA7C,eCAyC,CAAuB,IAAvB,EAA6BgE,GAA7B,EAAkC,EAAlC,CAAJ;AAAA,AFI3C,ACDKrC,AFJF,CGCsB,CAA9B,CFXY,GCcFA,eAAe,EAAE,EFJfhC,GAAJ,CECG;ACCXN,AFKIgB,ACFMuB,AFJF,ECMJvB,ICFMuB,CCHH,CAACzC,EDGM,CCHd,AHDeQ,CGCHoE,ADGI,EFJR,GEAG,ODMe,EAAE,SEL5B,uBFKsC9D,IAAV,EAAgBC,QAAhB,EAA0B;AAC9C,ACFE2B,AFJL,MEIKA,IAAI,CDEC,CCFCd,KDEKd,ECFE,CAACgC,CDET,GAAa/B,ICPjB,IDOI,GAAwBA,QAA/B;AEJR,AFKK,ACFK6B,AFfI,CAAd,ECFY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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function log(value) {\r\n    console.log('%c' + value, 'color: green;');\r\n}\r\n\r\nexport default log","import log from './logger.js'\r\n\r\nconst Util  = {\r\n    createRangeArray: function(initialValue, increment, howMany) {\r\n        let arr = [initialValue];\r\n        let currentValue = initialValue;\r\n        for(let i = 2; i <=howMany; i++) {\r\n            currentValue += increment;\r\n            arr.push(currentValue);\r\n        }\r\n        log(arr);\r\n        return arr;\r\n    }\r\n}\r\n\r\nexport default Util","const RBS = {\r\n    calculateFuelSaved: function (mass, velocity, rbsEfficiency) {\r\n        const kineticEnergy = this.calculateKineticEnergy(mass, velocity);\r\n        const energySaved = this.calculateEnergySaved(kineticEnergy, rbsEfficiency);\r\n        const fuelSavedPetrol = energySaved / (45000 * 0.30);\r\n        const fuelSavedDiesel = energySaved / (43000 * 0.35);\r\n        return {\r\n            mass: mass,\r\n            velocity: velocity,\r\n            rbsEfficiency: rbsEfficiency,\r\n            kineticEnergy: kineticEnergy.toFixed(2),\r\n            energySaved: energySaved.toFixed(2),\r\n            fuelSavedPetrol: fuelSavedPetrol.toFixed(2),\r\n            fuelSavedDiesel: fuelSavedDiesel.toFixed(2)\r\n        };\r\n    },\r\n\r\n    calculateKineticEnergy: function (mass, velocity) {\r\n        return 0.5 * mass * velocity * velocity;\r\n    },\r\n\r\n    calculateEnergySaved: function (energy, rbsEfficiciency) {\r\n        return energy * (rbsEfficiciency/100);\r\n    }\r\n}\r\n\r\nexport default RBS","function drawChart(divId, options) {\r\n  Chart.defaults.global.animation.duration = 3000;\r\n    var lineChartData = {\r\n        labels: options.labels,\r\n        datasets: [{\r\n          label: options.FirstDataSet,\r\n          borderColor: \"#f00\",\r\n          backgroundColor: \"#f00\",\r\n          fill: false,\r\n          data: options.dataSet1,\r\n          yAxisID: 'y-axis-1',\r\n        }, {\r\n          label: options.SecondDataSet,\r\n          borderColor: \"#000\",\r\n          backgroundColor: \"#000\",\r\n          fill: false,\r\n          data: options.dataSet2,\r\n          yAxisID: 'y-axis-1'\r\n        }]\r\n      };\r\n\r\n      const canvas = document.createElement('CANVAS');\r\n      document.getElementById(divId).appendChild(canvas);\r\n\r\n      var ctx = canvas.getContext('2d');\r\n      window.myLine = Chart.Line(ctx, {\r\n        data: lineChartData,\r\n        options: {\r\n          responsive: true,\r\n          hoverMode: 'index',\r\n          stacked: false,\r\n          title: {\r\n            display: true,\r\n            text: options.titleText\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\r\n              display: true,\r\n              position: 'left',\r\n              id: 'y-axis-1',\r\n            }\r\n            ],\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\nfunction add(a,b) {\r\n  return a + b;\r\n}\r\n\r\nexport default drawChart","import Util from './lib/utils.js'\r\nimport RBS from './lib/RBS.js'\r\nimport drawChart from './lib/drawChart.js'\r\n\r\nconst masses = Util.createRangeArray(1000, 10, 50);\r\n\r\nlet fuelSavedDataVsMass = masses.map(mass => RBS.calculateFuelSaved(mass, 100, 60));\r\nconsole.log(fuelSavedDataVsMass);\r\n\r\nconst velocities = Util.createRangeArray(60, 1, 90);\r\n\r\nlet fuelSavedDataVsVelocity = velocities.map(vel => RBS.calculateFuelSaved(1500, vel, 60));\r\nconsole.log(fuelSavedDataVsVelocity);\r\n\r\nconst brakeEfficiencies = Util.createRangeArray(60, 1, 35);\r\n\r\nlet fuelSavedDataVsBrakeEfficiency = brakeEfficiencies.map(efficiency => RBS.calculateFuelSaved(1500, 100, efficiency));\r\nconsole.log(fuelSavedDataVsBrakeEfficiency);\r\n\r\n\r\ndrawChart(\"massVaryingChart\",{\r\n    labels: fuelSavedDataVsMass.map(item => item.mass + ''),\r\n    dataSet1: fuelSavedDataVsMass.map(item => item.fuelSavedPetrol),\r\n    dataSet2: fuelSavedDataVsMass.map(item => item.fuelSavedDiesel),\r\n    titleText: \"Mass vs Fuel Saved\",\r\n    FirstDataSet: \"Petrol Fuel\",\r\n    SecondDataSet: \"Diesel fuel\"});\r\n\r\ndrawChart(\"velocityVaryingChart\",{\r\n      labels: fuelSavedDataVsVelocity.map(item => item.velocity + ''),\r\n      dataSet1: fuelSavedDataVsVelocity.map(item => item.fuelSavedPetrol),\r\n      dataSet2: fuelSavedDataVsVelocity.map(item => item.fuelSavedDiesel),\r\n      titleText: \"Velocity vs Fuel Saved\",\r\n      FirstDataSet: \"Petrol Fuel\",\r\n      SecondDataSet: \"Diesel fuel\"});\r\n  \r\ndrawChart(\"efficeincyVaryingChart\",{\r\n      labels: fuelSavedDataVsBrakeEfficiency.map(item => item.rbsEfficiency + ''),\r\n      dataSet1: fuelSavedDataVsBrakeEfficiency.map(item => item.fuelSavedPetrol),\r\n      dataSet2: fuelSavedDataVsBrakeEfficiency.map(item => item.fuelSavedDiesel),\r\n      titleText: \"Brake Efficiency vs Fuel Saved\",\r\n      FirstDataSet: \"Petrol Fuel\",\r\n      SecondDataSet: \"Diesel fuel\"});"]}