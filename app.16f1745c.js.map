{"version":3,"sources":["lib/logger.js","lib/utils.js","lib/RBS.js","lib/drawChart.js","app.js"],"names":["log","value","console","Util","createRangeArray","initialValue","increment","howMany","arr","currentValue","i","push","RBS","calculateFuelSaved","mass","velocity","rbsEfficiency","kineticEnergy","calculateKineticEnergy","energySaved","calculateEnergySaved","fuelSavedPetrol","fuelSavedDiesel","toFixed","energy","rbsEfficiciency","drawChart","divId","options","Chart","defaults","global","animation","duration","lineChartData","labels","datasets","label","FirstDataSet","borderColor","backgroundColor","fill","data","dataSet1","yAxisID","SecondDataSet","dataSet2","canvas","document","createElement","getElementById","appendChild","ctx","getContext","window","myLine","Line","responsive","hoverMode","stacked","title","display","text","titleText","scales","yAxes","type","position","id","add","a","b","masses","fuelSavedDataVsMass","map","velocities","fuelSavedDataVsVelocity","vel","brakeEfficiencies","fuelSavedDataVsBrakeEfficiency","efficiency","item"],"mappings":"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","file":"app.16f1745c.js","sourceRoot":"..","sourcesContent":["function log(value) {\r\n    console.log('%c' + value, 'color: green;');\r\n}\r\n\r\nexport default log","import log from './logger.js'\r\n\r\nconst Util  = {\r\n    createRangeArray: function(initialValue, increment, howMany) {\r\n        let arr = [initialValue];\r\n        let currentValue = initialValue;\r\n        for(let i = 2; i <=howMany; i++) {\r\n            currentValue += increment;\r\n            arr.push(currentValue);\r\n        }\r\n        log(arr);\r\n        return arr;\r\n    }\r\n}\r\n\r\nexport default Util","const RBS = {\r\n    calculateFuelSaved: function (mass, velocity, rbsEfficiency) {\r\n        const kineticEnergy = this.calculateKineticEnergy(mass, velocity);\r\n        const energySaved = this.calculateEnergySaved(kineticEnergy, rbsEfficiency);\r\n        const fuelSavedPetrol = energySaved / (45000 * 0.30);\r\n        const fuelSavedDiesel = energySaved / (43000 * 0.35);\r\n        return {\r\n            mass: mass,\r\n            velocity: velocity,\r\n            rbsEfficiency: rbsEfficiency,\r\n            kineticEnergy: kineticEnergy.toFixed(2),\r\n            energySaved: energySaved.toFixed(2),\r\n            fuelSavedPetrol: fuelSavedPetrol.toFixed(2),\r\n            fuelSavedDiesel: fuelSavedDiesel.toFixed(2)\r\n        };\r\n    },\r\n\r\n    calculateKineticEnergy: function (mass, velocity) {\r\n        return 0.5 * mass * velocity * velocity;\r\n    },\r\n\r\n    calculateEnergySaved: function (energy, rbsEfficiciency) {\r\n        return energy * (rbsEfficiciency/100);\r\n    }\r\n}\r\n\r\nexport default RBS","function drawChart(divId, options) {\r\n  Chart.defaults.global.animation.duration = 3000;\r\n    var lineChartData = {\r\n        labels: options.labels,\r\n        datasets: [{\r\n          label: options.FirstDataSet,\r\n          borderColor: \"#f00\",\r\n          backgroundColor: \"#f00\",\r\n          fill: false,\r\n          data: options.dataSet1,\r\n          yAxisID: 'y-axis-1',\r\n        }, {\r\n          label: options.SecondDataSet,\r\n          borderColor: \"#000\",\r\n          backgroundColor: \"#000\",\r\n          fill: false,\r\n          data: options.dataSet2,\r\n          yAxisID: 'y-axis-1'\r\n        }]\r\n      };\r\n\r\n      const canvas = document.createElement('CANVAS');\r\n      document.getElementById(divId).appendChild(canvas);\r\n\r\n      var ctx = canvas.getContext('2d');\r\n      window.myLine = Chart.Line(ctx, {\r\n        data: lineChartData,\r\n        options: {\r\n          responsive: true,\r\n          hoverMode: 'index',\r\n          stacked: false,\r\n          title: {\r\n            display: true,\r\n            text: options.titleText\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\r\n              display: true,\r\n              position: 'left',\r\n              id: 'y-axis-1',\r\n            }\r\n            ],\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\nfunction add(a,b) {\r\n  return a + b;\r\n}\r\n\r\nexport default drawChart","import Util from './lib/utils.js'\r\nimport RBS from './lib/RBS.js'\r\nimport drawChart from './lib/drawChart.js'\r\n\r\nconst masses = Util.createRangeArray(1000, 10, 50);\r\n\r\nlet fuelSavedDataVsMass = masses.map(mass => RBS.calculateFuelSaved(mass, 100, 60));\r\nconsole.log(fuelSavedDataVsMass);\r\n\r\nconst velocities = Util.createRangeArray(60, 1, 90);\r\n\r\nlet fuelSavedDataVsVelocity = velocities.map(vel => RBS.calculateFuelSaved(1500, vel, 60));\r\nconsole.log(fuelSavedDataVsVelocity);\r\n\r\nconst brakeEfficiencies = Util.createRangeArray(60, 1, 35);\r\n\r\nlet fuelSavedDataVsBrakeEfficiency = brakeEfficiencies.map(efficiency => RBS.calculateFuelSaved(1500, 100, efficiency));\r\nconsole.log(fuelSavedDataVsBrakeEfficiency);\r\n\r\n\r\ndrawChart(\"massVaryingChart\",{\r\n    labels: fuelSavedDataVsMass.map(item => item.mass + ''),\r\n    dataSet1: fuelSavedDataVsMass.map(item => item.fuelSavedPetrol),\r\n    dataSet2: fuelSavedDataVsMass.map(item => item.fuelSavedDiesel),\r\n    titleText: \"Mass vs Fuel Saved\",\r\n    FirstDataSet: \"Petrol Fuel\",\r\n    SecondDataSet: \"Diesel fuel\"});\r\n\r\ndrawChart(\"velocityVaryingChart\",{\r\n      labels: fuelSavedDataVsVelocity.map(item => item.velocity + ''),\r\n      dataSet1: fuelSavedDataVsVelocity.map(item => item.fuelSavedPetrol),\r\n      dataSet2: fuelSavedDataVsVelocity.map(item => item.fuelSavedDiesel),\r\n      titleText: \"Velocity vs Fuel Saved\",\r\n      FirstDataSet: \"Petrol Fuel\",\r\n      SecondDataSet: \"Diesel fuel\"});\r\n  \r\ndrawChart(\"efficeincyVaryingChart\",{\r\n      labels: fuelSavedDataVsBrakeEfficiency.map(item => item.rbsEfficiency + ''),\r\n      dataSet1: fuelSavedDataVsBrakeEfficiency.map(item => item.fuelSavedPetrol),\r\n      dataSet2: fuelSavedDataVsBrakeEfficiency.map(item => item.fuelSavedDiesel),\r\n      titleText: \"Brake Efficiency vs Fuel Saved\",\r\n      FirstDataSet: \"Petrol Fuel\",\r\n      SecondDataSet: \"Diesel fuel\"});"]}